{"version":3,"sources":["SingleTodo.js","AddTodo.js","TodoSection.js","App.js","serviceWorker.js","index.js"],"names":["SingleTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEraseButton","event","preventDefault","removeTodo","id","toggleOpenedDescription","setState","openedDescription","state","react_default","a","createElement","className","concat","onClick","name","time","date","importance","description","React","Component","AddTodo","handleInputChange","defineProperty","target","value","validateForm","validated","_len","arguments","length","aryToValidate","Array","_key","_arr","_i","i","handleAddNewTodoSubmit","addNewTodo","clearTodoForm","alert","toggleAddingNewTodo","addingNewTodo","onSubmit","htmlFor","onChange","placeholder","type","TodoSection","sortByDate","orientToCheck","orderedDateAsc","checkAsc","checkDesc","sortBy","b","sortByName","orderedNameAsc","sortByTime","orderedTimeAsc","sortByImportance","orderedImportanceAsc","todoHead","_this2","todos","src_AddTodo","map","singleTodoItem","src_SingleTodo","key","App","getTodos","localStorageTodos","JSON","parse","localStorage","getItem","newItem","toConsumableArray","saveStateToLocalStorage","itemId","newTodo","filter","singleItem","setTimeout","setItem","stringify","sortFunc","newTodos","sort","selectedTodo","src_TodoSection","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f57cb027.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SingleTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openedDescription: false\r\n    };\r\n  }\r\n\r\n  handleEraseButton = event => {\r\n    event.preventDefault();\r\n    this.props.removeTodo(this.props.id);\r\n  };\r\n\r\n  toggleOpenedDescription = () => {\r\n    this.setState({\r\n      openedDescription: !this.state.openedDescription\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`displayColumn ${this.state.openedDescription &&\r\n          \"activeDescription\"}`}\r\n        onClick={this.toggleOpenedDescription}\r\n      >\r\n        <div className=\"outerSingleTodo\">\r\n          <span>\r\n            {!this.state.openedDescription\r\n              ? `See \r\n              Details`\r\n              : `Close \r\n              Details`}\r\n          </span>\r\n          <div>{this.props.name}</div>\r\n          <div>{this.props.time}</div>\r\n          <div>{this.props.date}</div>\r\n          <div>{this.props.importance}</div>\r\n          <button onClick={this.handleEraseButton}>Remove</button>\r\n        </div>\r\n        <div className=\"outerTodoDescription\">\r\n          <div>{this.props.description}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleTodo;\r\n","import React from \"react\";\r\n\r\nclass AddTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      time: \"\",\r\n      date: \"\",\r\n      importance: \"\",\r\n      description: \"\",\r\n      addingNewTodo: false\r\n    };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  validateForm = (...aryToValidate) => {\r\n    let validated = true;\r\n\r\n    for (let i of aryToValidate) {\r\n      if (validated === true && i === \"\") {\r\n        validated = false;\r\n      }\r\n    }\r\n\r\n    return validated;\r\n  };\r\n\r\n  handleAddNewTodoSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    let isValidated = this.validateForm(\r\n      this.state.name,\r\n      this.state.time,\r\n      this.state.date,\r\n      this.state.importance,\r\n      this.state.description\r\n    );\r\n\r\n    if (!isValidated) {\r\n      alert(\"Please fill all the fields\");\r\n      return;\r\n    }\r\n\r\n    this.props.addNewTodo(\r\n      this.state.name,\r\n      this.state.time,\r\n      this.state.date,\r\n      this.state.importance,\r\n      this.state.description\r\n    );\r\n    //this.toggleAddingNewTodo\r\n    this.clearTodoForm();\r\n  };\r\n\r\n  clearTodoForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      time: \"\",\r\n      date: \"\",\r\n      importance: \"\",\r\n      description: \"\"\r\n    });\r\n  };\r\n\r\n  toggleAddingNewTodo = () => {\r\n    this.setState({\r\n      addingNewTodo: !this.state.addingNewTodo\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.addingNewTodo) {\r\n      return (\r\n        <div className=\"paddingSm\">\r\n          <button onClick={this.toggleAddingNewTodo}>Add a new to do</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"paddingSm\">\r\n        <form onSubmit={this.handleAddNewTodoSubmit}>\r\n          <div className=\"outerForm\">\r\n            <div className=\"formGroup\">\r\n              <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  onChange={this.handleInputChange}\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  placeholder=\"To do name\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"importance\">Importance</label>\r\n                <select\r\n                  onChange={this.handleInputChange}\r\n                  name=\"importance\"\r\n                  value={this.state.importance}\r\n                  placeholder=\"Your To do importante goes here\"\r\n                >\r\n                  <option />\r\n                  <option value=\"minor\">Minor</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <div className=\"formGroup\">\r\n              <div>\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  onChange={this.handleInputChange}\r\n                  name=\"date\"\r\n                  value={this.state.date}\r\n                  placeholder=\"Your To do date goes here\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"time\">Time</label>\r\n                <input\r\n                  type=\"time\"\r\n                  onChange={this.handleInputChange}\r\n                  name=\"time\"\r\n                  value={this.state.time}\r\n                  placeholder=\"Your To do time goes here\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea\r\n              onChange={this.handleInputChange}\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              placeholder=\"Your To do description goes here\"\r\n            />\r\n            <button>Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport SingleTodo from \"./SingleTodo\";\r\nimport AddTodo from \"./AddTodo\";\r\n\r\nclass TodoSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orderedDateAsc: false,\r\n      orderedNameAsc: false,\r\n      orderedTimeAsc: false,\r\n      orderedImportanceAsc: false\r\n    };\r\n  }\r\n\r\n  checkAsc(a, b) {\r\n    if (a > b) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  checkDesc(a, b) {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  sortByDate = () => {\r\n    let orientToCheck = this.state.orderedDateAsc\r\n      ? this.checkAsc\r\n      : this.checkDesc;\r\n\r\n    this.props.sortBy(function(a, b) {\r\n      return orientToCheck(a.time, b.time);\r\n    });\r\n\r\n    this.setState({\r\n      orderedDateAsc: !this.state.orderedDateAsc\r\n    });\r\n  };\r\n\r\n  sortByName = () => {\r\n    let orientToCheck = this.state.orderedNameAsc\r\n      ? this.checkAsc\r\n      : this.checkDesc;\r\n\r\n    this.props.sortBy(function(a, b) {\r\n      return orientToCheck(a.name, b.name);\r\n    });\r\n\r\n    this.setState({\r\n      orderedNameAsc: !this.state.orderedNameAsc\r\n    });\r\n  };\r\n\r\n  sortByTime = () => {\r\n    let orientToCheck = this.state.orderedTimeAsc\r\n      ? this.checkAsc\r\n      : this.checkDesc;\r\n\r\n    this.props.sortBy(function(a, b) {\r\n      return orientToCheck(a.name, b.name);\r\n    });\r\n\r\n    this.setState({\r\n      orderedTimeAsc: !this.state.orderedTimeAsc\r\n    });\r\n  };\r\n\r\n  sortByImportance = () => {\r\n    let orientToCheck = this.state.orderedTimeAsc\r\n      ? this.checkAsc\r\n      : this.checkDesc;\r\n\r\n    this.props.sortBy(function(a, b) {\r\n      return orientToCheck(a.importance, b.importance);\r\n    });\r\n\r\n    this.setState({\r\n      orderedTimeAsc: !this.state.orderedImportanceAsc\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let todoHead;\r\n\r\n    if (this.props.todos.length === 0) {\r\n      todoHead = (\r\n        <div className=\"outerSingleTodo outerSingleTodoHeader text-uppercase\">\r\n          <div>There's no to dos</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      todoHead = (\r\n        <div className=\"outerSingleTodo outerSingleTodoHeader text-uppercase font-bolded\">\r\n          <div onClick={this.sortByName}>name</div>\r\n          <div onClick={this.sortByTime}>time</div>\r\n          <div onClick={this.sortByDate}>date</div>\r\n          <div onClick={this.sortByImportance}>importance</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"displayColumn\">\r\n        <div>\r\n          <AddTodo addNewTodo={this.props.addNewTodo} />\r\n        </div>\r\n        <div className=\"text-uppercase\">\r\n          <h2>To do list</h2>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n        <div className=\"displayColumn todosTable\">\r\n          {todoHead}\r\n          {this.props.todos.map(singleTodoItem => {\r\n            return (\r\n              <SingleTodo\r\n                key={singleTodoItem.id}\r\n                id={singleTodoItem.id}\r\n                name={singleTodoItem.name}\r\n                time={singleTodoItem.time}\r\n                date={singleTodoItem.date}\r\n                importance={singleTodoItem.importance}\r\n                description={singleTodoItem.description}\r\n                removeTodo={this.props.removeTodo}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoSection from \"./TodoSection\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTodo: null,\r\n      todos: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTodos();\r\n  }\r\n\r\n  getTodos = () => {\r\n    let localStorageTodos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n    this.setState({\r\n      todos: localStorageTodos\r\n    });\r\n  };\r\n\r\n  addNewTodo = (name, time, date, importance, description) => {\r\n    let newItem = {\r\n      id: this.state.todos.length + 1,\r\n      name,\r\n      time,\r\n      date,\r\n      importance,\r\n      description\r\n    };\r\n\r\n    this.setState({\r\n      todos: [...this.state.todos, newItem]\r\n    });\r\n\r\n    this.saveStateToLocalStorage();\r\n  };\r\n\r\n  removeTodo = itemId => {\r\n    let newTodo = this.state.todos.filter(singleItem => {\r\n      return singleItem.id !== itemId && singleItem;\r\n    });\r\n\r\n    this.setState({\r\n      todos: newTodo\r\n    });\r\n\r\n    this.saveStateToLocalStorage();\r\n  };\r\n\r\n  saveStateToLocalStorage = () => {\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n    }, 1);\r\n  };\r\n\r\n  sortBy = sortFunc => {\r\n    let newTodos = [...this.state.todos];\r\n\r\n    newTodos.sort((a, b) => {\r\n      return sortFunc(a, b);\r\n    });\r\n\r\n    this.setState({\r\n      todos: newTodos\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header text-uppercase paddingSm\">\r\n          <h1>To do app</h1>\r\n        </header>\r\n        <TodoSection\r\n          path=\"/\"\r\n          todos={this.state.todos}\r\n          addNewTodo={this.addNewTodo}\r\n          removeTodo={this.removeTodo}\r\n          sortBy={this.sortBy}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}